//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18010
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GraphLib.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("GraphLib.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Axist X Setting.
        /// </summary>
        public static string AxisXSetting {
            get {
                return ResourceManager.GetString("AxisXSetting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Axist Y Setting.
        /// </summary>
        public static string AxisYSetting {
            get {
                return ResourceManager.GetString("AxisYSetting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Background Color Setting.
        /// </summary>
        public static string BGCSetting {
            get {
                return ResourceManager.GetString("BGCSetting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel.
        /// </summary>
        public static string btnCancel {
            get {
                return ResourceManager.GetString("btnCancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OK.
        /// </summary>
        public static string btnOK {
            get {
                return ResourceManager.GetString("btnOK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid MaxPlot.
        /// </summary>
        public static string ErrorInvalidMaxPlot {
            get {
                return ResourceManager.GetString("ErrorInvalidMaxPlot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid MaxValue.
        /// </summary>
        public static string ErrorInvalidMaxValue {
            get {
                return ResourceManager.GetString("ErrorInvalidMaxValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid MinValue.
        /// </summary>
        public static string ErrorInvalidMinValue {
            get {
                return ResourceManager.GetString("ErrorInvalidMinValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MaxValue must more than MinValue.
        /// </summary>
        public static string ErrorMaxLessThanMin {
            get {
                return ResourceManager.GetString("ErrorMaxLessThanMin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error.
        /// </summary>
        public static string ErrorMessageCaption {
            get {
                return ResourceManager.GetString("ErrorMessageCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Legends.
        /// </summary>
        public static string extLegend {
            get {
                return ResourceManager.GetString("extLegend", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Foregound Color Setting.
        /// </summary>
        public static string FGCSetting {
            get {
                return ResourceManager.GetString("FGCSetting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        public static byte[] HandCursor {
            get {
                object obj = ResourceManager.GetObject("HandCursor", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Axis Label.
        /// </summary>
        public static string lblAxisName {
            get {
                return ResourceManager.GetString("lblAxisName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current Data.
        /// </summary>
        public static string lblCurrentData {
            get {
                return ResourceManager.GetString("lblCurrentData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MaxPlot.
        /// </summary>
        public static string lblMaxPlot {
            get {
                return ResourceManager.GetString("lblMaxPlot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MaxValue.
        /// </summary>
        public static string lblMaxVal {
            get {
                return ResourceManager.GetString("lblMaxVal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MinValue.
        /// </summary>
        public static string lblMinVal {
            get {
                return ResourceManager.GetString("lblMinVal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap ZoomIn {
            get {
                object obj = ResourceManager.GetObject("ZoomIn", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
    }
}
